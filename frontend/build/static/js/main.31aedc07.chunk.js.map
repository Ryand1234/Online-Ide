{"version":3,"sources":["component/ide.componenent.jsx","pages/main.component.jsx","App.js","serviceWorker.js","index.js"],"names":["code","python","c","typescript","cpp","ruby","clanguage","IDE","props","editorDidMount","editor","console","log","getValue","getModel","onChange","newValue","e","setState","show","state","handleLanguage","output","ext","target","value","language","handleSubmit","a","preventDefault","data","lang","options","method","headers","Accept","body","JSON","stringify","fetch","res","json","ndata","width","height","defaultValue","this","theme","selectOnLineNumbers","fontSize","colorDecorators","name","onClick","style","color","React","Component","PAGE","className","onclick","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31aedc07.chunk.js","sourcesContent":["import MonacoEditor from 'react-monaco-editor'\nimport React from 'react'\n\nvar typescript = `//Define TypeScript Interface\ninterface IPerson{\n\tname: String;\n\tage: Number;\n\tmobile: Number;\n}\n\n//TypeScript Interface can be used \n//to know what values a variable holds.\nconst Aman:IPerson = {\n\tname: \"Aman\",\n\tage: 23,\n\tmobile: 9874563215\n}\n`\n\nvar python = `''Write your code here'''\n`\n\nvar c = `#include <stdio.h>\n\nint main()\n{\n\t//Enter your code here\n\treturn 0;\n}\n`\n\nvar cpp = `#include <iostream>\n\nint main()\n{\n\t//Enter your code here\n\treturn 0;\n}\n`\n\nvar ruby = `#Write Your Code here\n`\n\nvar code = {\n\tpython: python,\n\tc: c,\n\ttypescript: typescript,\n\tcpp: cpp,\n\truby: ruby\n}\n\nvar clanguage = {}\n\nclanguage['c'] = 'c';\nclanguage['cpp'] = 'cpp';\nclanguage['rb'] = 'ruby';\nclanguage['py'] = 'python';\nclanguage['typescript'] = 'typescript';\n\n\nexport class IDE extends React.Component {\n\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tcode: code['typescript'],\n\t\t\tlanguage: \"typescript\",\n\t\t\text: \"ts\",\n\t\t\toutput: ''\n\t\t}\n\t}\n\n\teditorDidMount = (editor) => {\n\t    // eslint-disable-next-line no-console\n\t    console.log(\"editorDidMount\", editor, editor.getValue(), editor.getModel());\n\t    this.editor = editor;\n\t};\n\n\tonChange = (newValue, e) =>{\n\t\tconsole.log(\"CHnage: \", newValue,\" E: \",e)\n\t\tthis.setState({code: newValue})\n\t}\n\n\tshow = () =>{\n\t\tconsole.log(\"CODE: \", this.state.code)\n\t}\n\n\t\n\n\thandleLanguage = (e) =>{\n\t\tthis.setState({output: '', ext: e.target.value, language: clanguage[e.target.value], code: code[clanguage[e.target.value]]})\n\t}\t\n\n\thandleSubmit = async(e) => {\n\t\te.preventDefault();\n\t\tvar data = {\n\t\t\tcode: this.state.code,\n\t\t\tlang: this.state.ext\n\t\t}\n\t\tvar options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t      'Content-type': 'application/json',\n\t\t      Accept: 'application/json'\n\t\t    },\n\t\t\tbody: JSON.stringify(data)\n\t\t}\n\t\tvar res = await fetch(\"submit\", options);\n\t\tvar ndata = await res.json()\n\t\tthis.setState({output: ndata.output})\n\t}\n\n\trender(){\n\t\tconst options = {\n\t      selectOnLineNumbers: true,\n\t      fontSize: 15,\n\t      colorDecorators: true\n\t    };\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<MonacoEditor\n\t\t\t\t\twidth=\"1300\"\n\t\t\t\t\theight=\"300\"\n\t\t\t\t\tdefaultValue=''\n\t\t\t\t\tvalue={this.state.code}\n\t\t\t\t\ttheme=\"vs-dark\"\n\t\t\t\t\toptions={options}\n\t\t\t\t\tlanguage={this.state.language}\n\t\t\t\t\teditorDidMount={this.editorDidMount}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t/>\n\t\t\t\t<select onChange={this.handleLanguage} name=\"lang\">\n\t\t\t\t\t<option  value=\"typescript\">TypeScript</option>\n\t\t\t\t\t<option value=\"c\">C</option>\n\t\t\t\t\t<option value=\"cpp\">C++14</option>\n\t\t\t\t\t<option value=\"py\">Python3</option>\n\t\t\t\t\t<option  value=\"rb\">Ruby</option>\n\t\t\t\t</select>\n\t\t\t\t<button onClick={this.handleSubmit}>Run</button>\n\t\t\t\t<div>\n\t\t\t\t\t<p style={{color: 'white'}}>{this.state.output}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","import React from 'react'\nimport {IDE} from '../component/ide.componenent'\nimport './main.css'\nexport class PAGE extends React.Component {\n\t\n\trender(){\n\t\t\n\t\treturn (\n\t\t    <div>\n\t\t    \t<div className=\"ide-head\">\n\t\t\t\t\t<h1 className=\"ide-head-content\"> Online IDE </h1>\n\t\t\t\t</div>\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th style={{color: 'white' }}>Text Color  |</th>\n\t\t\t\t\t\t<th style={{color: 'white' }}>  Code Background Color  |</th>\n\t\t\t\t\t\t<th style={{color: 'white' }}>  Background Color  |</th>\n\t\t\t\t\t\t<th style={{color: 'white' }}>  Font Size  |</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<select>\n\t\t\t\t\t\t\t\t<option onclick=\"txtColor(event)\" value=\"red\">Red</option>\n\t\t\t\t\t\t\t\t<option onclick=\"txtColor(event)\" value=\"blue\">Blue</option>\n\t\t\t\t\t\t\t\t<option onclick=\"txtColor(event)\" value=\"green\">Green</option>\n\t\t\t\t\t\t\t\t<option onclick=\"txtColor(event)\" value=\"cyan\">Cyan</option>\n\t\t\t\t\t\t\t\t<option onclick=\"txtColor(event)\" value=\"black\">Black</option>\n\t\t\t\t\t\t\t\t<option onclick=\"txtColor(event)\" value=\"yellow\">Yellow</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<select >\n\t\t\t\t\t\t\t\t<option onclick=\"ediBackColor(event)\" value=\"red\">Red</option>\n\t\t\t\t\t\t\t\t<option onclick=\"ediBackColor(event)\" value=\"grey\">Grey</option>\n\t\t\t\t\t\t\t\t<option onclick=\"ediBackColor(event)\" value=\"white\">white</option>\n\t\t\t\t\t\t\t\t<option onclick=\"ediBackColor(event)\" value=\"blue\">Blue</option>\n\t\t\t\t\t\t\t\t<option onclick=\"ediBackColor(event)\" value=\"green\">Green</option>\n\t\t\t\t\t\t\t\t<option onclick=\"ediBackColor(event)\" value=\"cyan\">Cyan</option>\n\t\t\t\t\t\t\t\t<option onclick=\"ediBackColor(event)\" value=\"black\">Black</option>\n\t\t\t\t\t\t\t\t<option onclick=\"ediBackColor(event)\" value=\"yellow\">Yellow</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<select >\n\t\t\t\t\t\t\t\t<option onclick=\"backColor(event)\" value=\"red\">Red</option>\n\t\t\t\t\t\t\t\t<option onclick=\"backColor(event)\" value=\"grey\">Grey</option>\n\t\t\t\t\t\t\t\t<option onclick=\"backColor(event)\" value=\"white\">white</option>\n\t\t\t\t\t\t\t\t<option onclick=\"backColor(event)\" value=\"blue\">Blue</option>\n\t\t\t\t\t\t\t\t<option onclick=\"backColor(event)\" value=\"green\">Green</option>\n\t\t\t\t\t\t\t\t<option onclick=\"backColor(event)\" value=\"cyan\">Cyan</option>\n\t\t\t\t\t\t\t\t<option onclick=\"backColor(event)\" value=\"black\">Black</option>\n\t\t\t\t\t\t\t\t<option onclick=\"backColor(event)\" value=\"yellow\">Yellow</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<select>\n\t\t\t\t\t\t\t\t<option onclick=\"font(event)\" value=\"5px\">5px</option>\n\t\t\t\t\t\t\t\t<option onclick=\"font(event)\" value=\"10px\">10px</option>\n\t\t\t\t\t\t\t\t<option onclick=\"font(event)\" value=\"15px\">15px</option>\n\t\t\t\t\t\t\t\t<option onclick=\"font(event)\" value=\"20px\">20px</option>\n\t\t\t\t\t\t\t\t<option onclick=\"font(event)\" value=\"25px\">25px</option>\n\t\t\t\t\t\t\t\t<option onclick=\"font(event)\" value=\"30px\">30px</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<div className=\"ide-content\">\t\t\t\n\t\t\t\t      <IDE />\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<footer className=\"ide-footer\">\n\t\t\t\t\t<p className=\"ide-dev\">Developed By Riyan Dhiman</p>\n\t\t\t\t\t<p className=\"ide-proj-link\">Link to Project <a className=\"ide-link\" href=\"https://github.com/Ryand1234/Online-Ide\">Github</a></p>\n\t\t\t\t</footer>  \n\t\t    </div>\n\t\t  );\n\t}\n}\n","import React from 'react';\nimport './App.css';\nimport {PAGE} from './pages/main.component'\n\nfunction App() {\n  return (\n    <div>\n      <PAGE />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}